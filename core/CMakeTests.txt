ENABLE_TESTING()

macro (catchTest arg)
    add_test (${arg} testCore -t ${arg})
endmacro(catchTest)

catchTest(  concat/strCat)
catchTest(  concat/parseSrc)
catchTest(  concat/numCat)

catchTest(  filterList)
catchTest(  agent/StartTerm)
catchTest(  parse/num)
catchTest(  parse/hexnum)
catchTest(  parse/binnum)
catchTest(  parse/largenum)
catchTest(  parse/string)
catchTest(  parse/list)
catchTest(  merge/num/typed1)
catchTest(  merge/num/typed2)
catchTest(  merge/num/typed3)
catchTest(  merge/num/typed4)
catchTest(  merge/num/typed5)
catchTest(  merge/num/typed6)
catchTest(  merge/num/typed7)
catchTest(  merge/str/typed1)
catchTest(  merge/str/typed2)
catchTest(  merge/str/typed3)
catchTest(  merge/str/typed4)
catchTest(  merge/str/typed5)
catchTest(  merge/list/typed1)
catchTest(  merge/list/typed2)
catchTest(  merge/list/typed3)
catchTest(  merge/list/typed4)
catchTest(  merge/list/typed5)

catchTest(  parse3n4)
catchTest(  anonFunc1)
catchTest(  anonFunc2)
catchTest(  revrseFuncSyntax)
catchTest(  catHatDogPig)
catchTest(  nestedRefs)
catchTest(  add)
catchTest(  nestedAdd)
catchTest(  addRefd)
catchTest(  addRevRefs)
catchTest(  TwoArgFunc)
catchTest(  tags/defUse)
catchTest(  tags/nestedEmpty)
catchTest(  tags/taggedFunc)
catchTest(  simpleParse1)
catchTest(  ParseSelect2nd)
catchTest(  ParseSelect1st)
catchTest(  parse2Itms)
catchTest(  parse2ItmsGet1st)
catchTest(  simpleParse2)
catchTest(  innerParse1)
catchTest(  fromHereIdx1)
catchTest(  fromHereIdx2)
catchTest(  fromHereIdxNeg)
catchTest(  simpleAssoc)
catchTest(  internalAssoc)
catchTest(  seqFuncPass)
catchTest(  select2ndItem)
catchTest(  tags/selByTag)
catchTest(  simpleFilter)
catchTest(  tags/FilterByTag)
catchTest(  internalWrite)
catchTest(  externalWrite)
catchTest(  tags/find-n-write)
catchTest(  byType/findChain)
catchTest(  byType/writeChain)
catchTest(  byType/set)
catchTest(  byType/write-n-set)



#define a macro to simplify adding tests, then use it
#macro (do_test arg result)
#  add_test (TutorialComp${arg} test ${arg})
#  set_tests_properties (TutorialComp${arg} PROPERTIES PASS_REGULAR_EXPRESSION ${result})
#endmacro (do_test)
